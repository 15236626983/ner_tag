的话题，引起了千万级别的评论与转发。到底是哪些人对[@人工智能#ai_tec*]感兴趣呢？为了形象直观地了解关注者群体的年龄、性别比例、职业等，我们需要对数据进行数据描述性分析，平均数、中位数、分位数、方差等统计指标可以帮助我们粗略了解数据分布，峰度、偏度等则描述了更细致的特征。在关注程度层面，很多人仅仅是转发，有的用户则是有感而发，年龄、职业等因素是否会影响对该话题的关注程度呢？回归分析、方差分析等方法则可以帮助我们解决这个疑惑。简单的统计分析可以帮助我们了解数据，如果希望对大数据进行逐个地、更深层次地探索，总结出规律和模型，则需要更加智能的基于机器学习的数据分析方法。[@柯洁#Person*]与[@AlphaGo#ai_product*]对战引起了围棋和[$人工智能#ai_tec*]两类群体的密切关注，一些聚类分析的方法可以高效准确地将关注者聚为两类。针对[$人工智能#ai_tec*]，乐观派认为会使得人类生活更加美好，也有悲观的人认为技术失控则高度危险。许多分类方法可以帮助我们鉴别用户观点与情感。微博的关注网络是典型的社会网络，尽管图是数据分析领域最为棘手的结构之一，许多研究表明社会网络的许多独特性质可以帮助我们设计更加高效的算法。例如，社会网络中的聚类被称为社区发现，许多精心设计的高效算法可以很好地处理上亿用户的大规模网络。[@微博#Org*]上每个用户的言论、转发内容等都蕴藏着用户个人的兴趣、话题等信息，对文字内容本身的智能分析理解也是数据分析领域长久以来孜孜不倦追求的目标。[$微博#Org*]中出现的“强化学习、神经网络等”等词语可以帮助我们迅速定位这条[$微博#Org*]大概率属于“[$人工智能#ai_tec*]”话题，词向量和语言模型则是近些年自然语言处理新浪潮的基础。下面首先介绍基本统计分析方法，然后介绍数据挖掘/机器学习算法。“Planet-Scale Land Cover Classification with FPGAs”是一个受邀的工业界报告。报告人是[@微软#Org*]商业智能部门的 CTO [@Joseph Sirosh#Person*] 博士。[@Joseph Sirosh#Person*] 博士以前是[@Amazon#Gpe*] 的全球创新平台的副总裁。[@Joseph#Person*]主要介绍了[$微软#Org*]利用卫星图片来做的大数据分析，建立了美国农业图像大数据库，从模型的角度实现了[@基于 DNN 的模型#ai_tec*]，在架构方面，比较有意思的是该工作使用了[@基于 FPGAs 的深度学习架构#ai_tec*]。该工作可以实现 10 分钟内处理 20T 的高清图片，大约每秒40 多万张图片。5.4 [@Facebook#Org*] [$Facebook#Org*] [@2018#Date*] 年在数据挖掘顶级国际会议KDD上一共发表了2 篇文章（见下表），这两篇文章都是发表在 KDD的 Applied Data Science Track。“Rosetta: Large Scale System for Text Detection and Recognition in Images”这篇文章介绍了 [$Facebook#Org*] 的图像文字识别OCR 系统 Rosetta。[$Facebook#Org*] 每天用户都上传大量图片，从这些图片中识别出文字可以帮助提高搜索和推荐效率。这里面的挑战主要是两个，一个是图片中的文字字体、文字语言多样，而且还可能有很多自定义词以及一些特殊的字符，例如网页链接等；另一个挑战是每天需要处理大量的图片。Rosetta 的目标是做到实时处理（识别图片中的文字）用户上传的图片。从算法来说，Rosetta 使用了一个两阶段的识别策略，第一阶段是用 [@Faster-RCNN #ai_tec*]快速识别图片中包含文字的区域，第二阶段则是使用了一个全卷积网络进行文字识别。下图描述 Rosetta 的两阶段抽取架构。“KunPeng: Parameter Server based Distributed Learning Systems and Its Applications inAlibaba and Ant Financial”介绍了蚂蚁金服提出了基于参数服务器的分布式学习系统“鲲鹏”。“鲲鹏”使得现有的一系列算法在十亿级别的样本和特征数据上的性能及效率有了极大的提高。鲲鹏的总体架构的核心模块包括以下几部分：Server nodes：对模型做分片存储、Worker nodes：对训练数据做分片并计算、Coordinator：控制算法整体流程，如初始化，迭代，终止等、ML Bridge：使用脚本形式的工作流对数据进行预处理、PS-Core：核心的参数服务器组件(servers/workers/coordinator)、Fuxi：监控所有机器运行状态，必要时进行容错。下图给出了鲲鹏的总体架构。鲲鹏的使用流程对用户是完全透明的，而且开发者能够通过非常非常简单的代码实现复杂的通信和调度过程。鲲鹏架构使得常用的机器学习算法的大规模化成为了可能，截止目前，已经有众多机器学习算法在鲲鹏上得以实现和应用，包括但不限于 LR，FTRL，MART，FM，HashMF，DSSM，[@DNN#ai_tec*]，LDA。“A Hybrid Framework for Text Modeling with Convolutional RNN”在文本分类方面提出了 [@conv-RNN#ai_tec*] 框架。[$conv-RNN#ai_tec*] 综合使用和 [@CNN#ai_tec*] 和 [@RNN#ai_tec*] 并且整合了两个模型在不同方面的优点——[$RNN#ai_tec*] 模型对不定长跨度的上下文依赖的编码能以及 [$CNN#ai_tec*] 模型中常用的最大池化机制，增强了机器学习和分类的能力。[$conv-RNN#ai_tec*] 结构：Word embedding 层：原始输入句子S 中的词映射为对应的词向量，并用矩阵来表示句子；Bi-[$RNN#ai_tec*] 层：双向 [$RNN#ai_tec*] 层，得到正向的 hidden state 和反向的 hidden state；Convolution layer：在 [$RNN#ai_tec*] 层得到的 hidden state 的基础上进行卷积，使用 ReLU 作为激活函数；Pooling 层：用 max-pooing 作为池化函数，对每个卷积得到的向量进行 max-pooling 操作得到其中最大值。则生成对应的输入向量。文中提出了基于句子分类的 CONV-[$RNN#ai_tec*]，在 CONV-[$RNN#ai_tec*] 之上加一个联合层，将CONV-[$RNN#ai_tec*] 得 到 的 Xq 以 及 之 前 的 得 到 的 两 个 HIDDEN STATE 向 量 拼 接 起 来作为输入文本的最终表示。最后经过 SOFTMAX 层 将向量表示映射到各个类别上，完成分类预测。