By [@DL#ai_tec*] we refer to [@machine learning#ai_tec*] models consisting of multiple of layers of nonlinear processing units. Typically, these models are represented by [@artificial neural networks#ai_tec*]. In this context, a neuron refers to a single computation unit where the output is a weighted sum of inputs that passed a (nonlinear) [@activation function#ai_tec*] (e.g., a function that passes the signal only if it is positive). [@DNNs#ai_tec*] refer to systems with a large number of serially connected layers of parallel-connected [@neurons#ai_tec*]. The contrast to a [@DNN#ai_tec*] is a shallow [@neural network#ai_tec*] that has only one layer of parallel-connected [$neurons#ai_tec*]. Until about ten years ago, training of [$DNNs#ai_tec*] was virtually impossible. The first successful training strategies for [@deep networks#ai_tec*] were based on training one layer at a time [21, 6]. The parameters of the layer- by-layer-trained [$deep networks#ai_tec*] were finally fine-tuned (simultaneously) using [@stochastic gradient methods#ai_tec*] [49] to maximize the classification accuracy. Since then, many research advances have made it possible to directly train [$DNNs#ai_tec*] without having a layer-by-layer training. For example, it has been found that initialization strategies for the weights of the network in combination with [$activation function#ai_tec*] selection are crucial [16]. Even techniques such as [@randomly disabling neurons#ai_tec*] during the training phase [22], and normalizing the signals before they reach the [@activation functions#ai_tec*] [25] have shown to be of great importance in achieving good results with [$DNNs#ai_tec*]. Representation learning is one of main reasons for the high performance of [$DNNs#ai_tec*]. Using [$DL#ai_tec*] and [$DNNs#ai_tec*] it is no longer necessary to manually craft the features required to learn a specific task. Instead, discriminating features are automatically learned during the training of a [$DNN#ai_tec*]. Techniques and tools supporting [@DL-applications#ai_product*] are more available today than ever before. Advanced [$DL#ai_tec*] can be successfully applied and customized using only limited programming/scripting skills through cheap computational resources, free [@ML-frameworks#ai_product*], [@pre-trained models#ai_product*], open-source data and code.